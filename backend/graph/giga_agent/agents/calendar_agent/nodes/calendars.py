"""
–£–∑–ª—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞–ª–µ–Ω–¥–∞—Ä—è–º–∏ –≤ Google Calendar
"""

import logging
from typing import Annotated

from langchain_core.tools import tool
from langgraph.prebuilt import InjectedState

from ..utils.google_api import calendar_client
from ..utils.oauth_manager import oauth_manager
from ..utils.storage import storage

logger = logging.getLogger(__name__)

@tool
async def list_calendars(user_id: str, state: Annotated[dict, InjectedState]):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        user_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        if not oauth_manager.is_authenticated(user_id):
            return {
                "error": True,
                "message": "‚ùå **–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω Google Calendar**\n\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∫–æ–º–∞–Ω–¥–æ–π: \"–ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å\""
            }
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π
        result = await calendar_client.list_calendars(user_id)
        
        if 'error' in result:
            return {
                "error": True,
                "message": f"‚ùå **–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π:**\n{result['error']}\n\nüìù {result.get('details', '')}"
            }
        
        calendars = result.get('items', [])
        if not calendars:
            return {
                "success": True,
                "message": "üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            }
        
        # –¢–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        current_calendar_id = storage.get_user_calendar_id(user_id)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π
        message = "üìÖ **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏:**\n\n"
        
        for calendar in calendars:
            calendar_id = calendar.get('id', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            summary = calendar.get('summary', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
            description = calendar.get('description', '')
            access_role = calendar.get('accessRole', 'unknown')
            
            # –û—Ç–º–µ—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
            marker = "‚úÖ " if calendar_id == current_calendar_id else "üìã "
            
            message += f"{marker}**{summary}**\n"
            message += f"  üÜî `{calendar_id}`\n"
            message += f"  üîë –î–æ—Å—Ç—É–ø: {access_role}\n"
            
            if description:
                desc = description[:100]
                if len(description) > 100:
                    desc += "..."
                message += f"  üìù {desc}\n"
            
            message += "\n"
        
        message += f"üí° **–¢–µ–∫—É—â–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å:** {current_calendar_id}\n"
        message += "üîß –î–ª—è —Å–º–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: \"—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å [ID]\""
        
        return {
            "success": True,
            "message": message,
            "calendars_count": len(calendars),
            "current_calendar": current_calendar_id
        }
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π: {e}")
        return {
            "error": True,
            "message": f"‚ùå **–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π:** {str(e)}"
        }

@tool
async def set_calendar(user_id: str, calendar_id: str, state: Annotated[dict, InjectedState]):
    """
    –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        user_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        calendar_id: ID –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'primary' –∏–ª–∏ email)
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        if not oauth_manager.is_authenticated(user_id):
            return {
                "error": True,
                "message": "‚ùå **–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω Google Calendar**\n\n–î–ª—è —Å–º–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∫–æ–º–∞–Ω–¥–æ–π: \"–ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å\""
            }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        calendars_result = await calendar_client.list_calendars(user_id)
        
        if 'error' in calendars_result:
            return {
                "error": True,
                "message": f"‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:**\n{calendars_result['error']}"
            }
        
        calendars = calendars_result.get('items', [])
        calendar_exists = False
        calendar_name = calendar_id
        
        for calendar in calendars:
            if calendar.get('id') == calendar_id:
                calendar_exists = True
                calendar_name = calendar.get('summary', calendar_id)
                break
        
        if not calendar_exists:
            available_calendars = [cal.get('id', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') for cal in calendars]
            return {
                "error": True,
                "message": f"""‚ùå **–ö–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–µ –Ω–∞–π–¥–µ–Ω**

üîç –ö–∞–ª–µ–Ω–¥–∞—Ä—å `{calendar_id}` –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ.

üìã **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏:**
{chr(10).join([f"‚Ä¢ {cal_id}" for cal_id in available_calendars])}

üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É \"–ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏\" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞."""
            }
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        storage.set_user_calendar_id(user_id, calendar_id)
        
        return {
            "success": True,
            "message": f"""‚úÖ **–ö–∞–ª–µ–Ω–¥–∞—Ä—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω**

üìÖ **–ê–∫—Ç–∏–≤–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å:** {calendar_name}
üÜî **ID:** `{calendar_id}`

üí° –¢–µ–ø–µ—Ä—å –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Å —ç—Ç–∏–º –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º:
- –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π
- –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
- –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á"""
        }
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {e}")
        return {
            "error": True,
            "message": f"‚ùå **–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:** {str(e)}"
        }

@tool
async def get_calendar_info(user_id: str, state: Annotated[dict, InjectedState]):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –∞–∫—Ç–∏–≤–Ω–æ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
    
    Args:
        user_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        if not oauth_manager.is_authenticated(user_id):
            return {
                "error": True,
                "message": "‚ùå **–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω Google Calendar**\n\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∫–æ–º–∞–Ω–¥–æ–π: \"–ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å\""
            }
        
        current_calendar_id = storage.get_user_calendar_id(user_id)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º
        calendars_result = await calendar_client.list_calendars(user_id)
        
        if 'error' in calendars_result:
            return {
                "error": True,
                "message": f"‚ùå **–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:**\n{calendars_result['error']}"
            }
        
        calendars = calendars_result.get('items', [])
        current_calendar_info = None
        
        for calendar in calendars:
            if calendar.get('id') == current_calendar_id:
                current_calendar_info = calendar
                break
        
        if not current_calendar_info:
            return {
                "error": True,
                "message": f"‚ùå **–¢–µ–∫—É—â–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–µ –Ω–∞–π–¥–µ–Ω**\n\n–ö–∞–ª–µ–Ω–¥–∞—Ä—å `{current_calendar_id}` –±–æ–ª—å—à–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
            }
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
        name = current_calendar_info.get('summary', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
        description = current_calendar_info.get('description', '')
        access_role = current_calendar_info.get('accessRole', 'unknown')
        time_zone = current_calendar_info.get('timeZone', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        
        message = f"""üìÖ **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ**

**{name}**
üÜî ID: `{current_calendar_id}`
üîë –î–æ—Å—Ç—É–ø: {access_role}
üåç –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {time_zone}"""
        
        if description:
            message += f"\nüìù –û–ø–∏—Å–∞–Ω–∏–µ: {description}"
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–æ–±—ã—Ç–∏–π (–±–ª–∏–∂–∞–π—à–∏–µ 10)
        events_result = await calendar_client.list_events(user_id, max_results=5)
        if 'error' not in events_result:
            events_count = len(events_result.get('items', []))
            message += f"\n\nüìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**"
            message += f"\n‚Ä¢ –ë–ª–∏–∂–∞–π—à–∏—Ö —Å–æ–±—ã—Ç–∏–π: {events_count}"
        
        message += f"\n\nüîß **–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:**"
        message += f"\n‚Ä¢ \"—Å–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ\" - –¥–æ–±–∞–≤–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É"
        message += f"\n‚Ä¢ \"–ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–±—ã—Ç–∏—è\" - –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"
        message += f"\n‚Ä¢ \"–ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–∏\" - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π"
        
        return {
            "success": True,
            "message": message,
            "calendar_info": current_calendar_info
        }
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ: {e}")
        return {
            "error": True,
            "message": f"‚ùå **–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:** {str(e)}"
        }
