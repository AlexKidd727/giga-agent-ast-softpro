"""
–ì—Ä–∞—Ñ PC Management Agent
"""

import logging
from typing import Annotated, TypedDict

from langchain_core.tools import tool
from langchain_core.messages import HumanMessage, ToolMessage
from langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder
from langgraph.prebuilt import InjectedState
from langgraph.constants import START
from langgraph.graph import StateGraph
from langgraph.graph.ui import push_ui_message

from giga_agent.agents.pc_agent.nodes.system import get_system_info, run_program, list_programs, get_process_list, kill_process
from giga_agent.agents.pc_agent.nodes.files import search_files, open_file, create_file, read_file, file_info, list_directory
from giga_agent.agents.pc_agent.nodes.windows import open_windows, close_window, get_window_info, minimize_window, maximize_window

logger = logging.getLogger(__name__)

# –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ü–ö
PC_TOOLS = [
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    get_system_info,
    run_program,
    list_programs,
    get_process_list,
    kill_process,
    # –§–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    search_files,
    open_file,
    create_file,
    read_file,
    file_info,
    list_directory,
    # –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –æ–∫–Ω–∞–º–∏
    open_windows,
    close_window,
    get_window_info,
    minimize_window,
    maximize_window
]

@tool
async def pc_agent(
    user_request: str,
    user_id: str = "default_user",
    state: Annotated[dict, InjectedState] = None
):
    """
    –ê–≥–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º –Ω–∞ Windows
    
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ü–ö:
    - –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏
    - –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    - –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
    - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–∫–Ω–∞–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    - –ü–æ–∏—Å–∫ –∏ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–æ–≤
    
    Args:
        user_request: –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–ª–æ–∫–Ω–æ—Ç", "–Ω–∞–π—Ç–∏ —Ñ–∞–π–ª test.txt")
        user_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    """
    
    try:
        user_input = user_request.lower()
        
        # –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        if any(phrase in user_input for phrase in ["—Å–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ", "—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞", "—Å–∏—Å—Ç–µ–º–∞"]):
            result = await get_system_info.ainvoke({"user_id": user_id, "state": state})
            return result.get("message", "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            
        elif any(phrase in user_input for phrase in ["—Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º", "—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã", "–ø—Ä–æ–≥—Ä–∞–º–º—ã"]):
            result = await list_programs.ainvoke({"user_id": user_id, "state": state})
            return result.get("message", "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º")
            
        elif any(phrase in user_input for phrase in ["–ø—Ä–æ—Ü–µ—Å—Å—ã", "–∑–∞–ø—É—â–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã", "–¥–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á"]):
            result = await get_process_list.ainvoke({"user_id": user_id, "state": state})
            return result.get("message", "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤")
        
        # –ö–æ–º–∞–Ω–¥—ã –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º
        elif user_input.startswith("–∑–∞–ø—É—Å—Ç–∏—Ç—å ") or user_input.startswith("–æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É "):
            program_name = user_input.replace("–∑–∞–ø—É—Å—Ç–∏—Ç—å ", "").replace("–æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É ", "").strip()
            return f"""üöÄ **–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã**

–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç run_program —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
‚Ä¢ program_name: –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã ({program_name})
‚Ä¢ user_id: –í–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–ü—Ä–∏–º–µ—Ä: –∑–∞–ø—É—Å—Ç–∏—Ç—å "{program_name}\""""
            
        elif user_input.startswith("–∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å ") or user_input.startswith("—É–±–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å "):
            process_name = user_input.replace("–∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å ", "").replace("—É–±–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å ", "").strip()
            return f"""‚ö†Ô∏è **–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞**

–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç kill_process —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
‚Ä¢ process_identifier: PID –∏–ª–∏ –∏–º—è –ø—Ä–æ—Ü–µ—Å—Å–∞ ({process_name})
‚Ä¢ user_id: –í–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ:** –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –ø–æ—Ç–µ—Ä–µ –¥–∞–Ω–Ω—ã—Ö!"""
        
        # –§–∞–π–ª–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
        elif any(phrase in user_input for phrase in ["–Ω–∞–π—Ç–∏ —Ñ–∞–π–ª", "–ø–æ–∏—Å–∫ —Ñ–∞–π–ª", "–∏—Å–∫–∞—Ç—å —Ñ–∞–π–ª"]):
            return """üîç **–ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤**

–î–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç search_files —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
‚Ä¢ pattern: –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞
‚Ä¢ directory: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
‚Ä¢ file_type: –¢–∏–ø —Ñ–∞–π–ª–∞ (text, image, video, audio, document, code)
‚Ä¢ user_id: –í–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–ü—Ä–∏–º–µ—Ä: –Ω–∞–π—Ç–∏ –≤—Å–µ —Ñ–∞–π–ª—ã —Å "test" –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏"""
            
        elif user_input.startswith("–æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª ") or user_input.startswith("–æ—Ç–∫—Ä—ã—Ç—å "):
            file_name = user_input.replace("–æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª ", "").replace("–æ—Ç–∫—Ä—ã—Ç—å ", "").strip()
            return f"""üìÇ **–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞**

–î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç open_file —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
‚Ä¢ file_path: –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
‚Ä¢ user_id: –í–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–°–Ω–∞—á–∞–ª–∞ –Ω–∞–π–¥–∏—Ç–µ —Ñ–∞–π–ª "{file_name}" —Å –ø–æ–º–æ—â—å—é search_files"""
            
        elif user_input.startswith("–ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª ") or user_input.startswith("—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ "):
            file_name = user_input.replace("–ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª ", "").replace("—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ ", "").strip()
            return f"""üìñ **–ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞**

–î–ª—è —á—Ç–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç read_file —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
‚Ä¢ file_path: –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
‚Ä¢ user_id: –í–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–°–Ω–∞—á–∞–ª–∞ –Ω–∞–π–¥–∏—Ç–µ —Ñ–∞–π–ª "{file_name}" —Å –ø–æ–º–æ—â—å—é search_files"""
            
        elif user_input.startswith("—Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª ") or user_input.startswith("–Ω–æ–≤—ã–π —Ñ–∞–π–ª "):
            file_name = user_input.replace("—Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª ", "").replace("–Ω–æ–≤—ã–π —Ñ–∞–π–ª ", "").strip()
            return f"""‚úèÔ∏è **–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞**

–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç create_file —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
‚Ä¢ file_path: –ü—É—Ç—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Desktop/{file_name})
‚Ä¢ content: –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
‚Ä¢ user_id: –í–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–ü—Ä–∏–º–µ—Ä: —Å–æ–∑–¥–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –∑–∞–º–µ—Ç–∫–∞–º–∏"""
            
        elif any(phrase in user_input for phrase in ["—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏", "—Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤", "—á—Ç–æ –≤ –ø–∞–ø–∫–µ", "–ø–æ–∫–∞–∑–∞—Ç—å –ø–∞–ø–∫—É"]):
            return """üìÅ **–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–∞–ø–∫–∏**

–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–∞–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç list_directory —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
‚Ä¢ directory: –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –¥–æ–º–∞—à–Ω—è—è –ø–∞–ø–∫–∞)
‚Ä¢ show_hidden: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–∫—Ä—ã—Ç—ã–µ —Ñ–∞–π–ª—ã (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
‚Ä¢ user_id: –í–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–ü—Ä–∏–º–µ—Ä: –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ Desktop"""
        
        # –ö–æ–º–∞–Ω–¥—ã —Ä–∞–±–æ—Ç—ã —Å –æ–∫–Ω–∞–º–∏
        elif any(phrase in user_input for phrase in ["–æ—Ç–∫—Ä—ã—Ç—ã–µ –æ–∫–Ω–∞", "—Å–ø–∏—Å–æ–∫ –æ–∫–æ–Ω", "–æ–∫–Ω–∞", "–∞–∫—Ç–∏–≤–Ω—ã–µ –æ–∫–Ω–∞"]):
            result = await open_windows.ainvoke({"user_id": user_id, "state": state})
            return result.get("message", "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –æ–∫–æ–Ω")
            
        elif user_input.startswith("–∑–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ ") or user_input.startswith("–∑–∞–∫—Ä—ã—Ç—å "):
            window_name = user_input.replace("–∑–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ ", "").replace("–∑–∞–∫—Ä—ã—Ç—å ", "").strip()
            return f"""‚ùå **–ó–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞**

–î–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç close_window —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
‚Ä¢ window_identifier: HWND –æ–∫–Ω–∞ –∏–ª–∏ —á–∞—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∞ ({window_name})
‚Ä¢ user_id: –í–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –æ–∫–æ–Ω —Å –ø–æ–º–æ—â—å—é open_windows"""
            
        elif user_input.startswith("—Å–≤–µ—Ä–Ω—É—Ç—å –æ–∫–Ω–æ ") or user_input.startswith("—Å–≤–µ—Ä–Ω—É—Ç—å "):
            window_name = user_input.replace("—Å–≤–µ—Ä–Ω—É—Ç—å –æ–∫–Ω–æ ", "").replace("—Å–≤–µ—Ä–Ω—É—Ç—å ", "").strip()
            return f"""üìâ **–°–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –æ–∫–Ω–∞**

–î–ª—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –æ–∫–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç minimize_window —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
‚Ä¢ window_identifier: HWND –æ–∫–Ω–∞ –∏–ª–∏ —á–∞—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∞ ({window_name})
‚Ä¢ user_id: –í–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –æ–∫–æ–Ω —Å –ø–æ–º–æ—â—å—é open_windows"""
            
        elif user_input.startswith("—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –æ–∫–Ω–æ ") or user_input.startswith("—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å "):
            window_name = user_input.replace("—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –æ–∫–Ω–æ ", "").replace("—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å ", "").strip()
            return f"""üìà **–†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –æ–∫–Ω–∞**

–î–ª—è —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –æ–∫–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç maximize_window —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
‚Ä¢ window_identifier: HWND –æ–∫–Ω–∞ –∏–ª–∏ —á–∞—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∞ ({window_name})
‚Ä¢ user_id: –í–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –æ–∫–æ–Ω —Å –ø–æ–º–æ—â—å—é open_windows"""
        
        # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞
        else:
            return """üñ•Ô∏è **PC Management Agent**

üéõÔ∏è **–°–∏—Å—Ç–µ–º–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:**
‚Ä¢ "—Å–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" - —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
‚Ä¢ "—Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º" - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚Ä¢ "–ø—Ä–æ—Ü–µ—Å—Å—ã" - –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
‚Ä¢ "–∑–∞–ø—É—Å—Ç–∏—Ç—å [–ø—Ä–æ–≥—Ä–∞–º–º–∞]" - –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚Ä¢ "–∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å [–∏–º—è]" - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞

üìÅ **–§–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:**
‚Ä¢ "–Ω–∞–π—Ç–∏ —Ñ–∞–π–ª [–Ω–∞–∑–≤–∞–Ω–∏–µ]" - –ø–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤
‚Ä¢ "–æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª [–ø—É—Ç—å]" - –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞
‚Ä¢ "–ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª [–ø—É—Ç—å]" - —á—Ç–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
‚Ä¢ "—Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª [–Ω–∞–∑–≤–∞–Ω–∏–µ]" - —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
‚Ä¢ "—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ [–ø—É—Ç—å]" - –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏

ü™ü **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–∫–Ω–∞–º–∏:**
‚Ä¢ "–æ—Ç–∫—Ä—ã—Ç—ã–µ –æ–∫–Ω–∞" - —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–∫–æ–Ω
‚Ä¢ "–∑–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ [–Ω–∞–∑–≤–∞–Ω–∏–µ]" - –∑–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞
‚Ä¢ "—Å–≤–µ—Ä–Ω—É—Ç—å –æ–∫–Ω–æ [–Ω–∞–∑–≤–∞–Ω–∏–µ]" - —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ
‚Ä¢ "—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –æ–∫–Ω–æ [–Ω–∞–∑–≤–∞–Ω–∏–µ]" - —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ

üîß **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:**
‚Ä¢ get_system_info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
‚Ä¢ run_program - –∑–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º
‚Ä¢ list_programs - —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º
‚Ä¢ get_process_list - —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
‚Ä¢ kill_process - –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
‚Ä¢ search_files - –ø–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤
‚Ä¢ open_file - –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–æ–≤
‚Ä¢ read_file - —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
‚Ä¢ create_file - —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
‚Ä¢ list_directory - —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–æ–∫
‚Ä¢ open_windows - —Å–ø–∏—Å–æ–∫ –æ–∫–æ–Ω
‚Ä¢ close_window - –∑–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–æ–Ω
‚Ä¢ minimize_window - —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –æ–∫–æ–Ω
‚Ä¢ maximize_window - —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –æ–∫–æ–Ω
‚Ä¢ get_window_info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–∫–Ω–µ

üí° **–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã:**
–±–ª–æ–∫–Ω–æ—Ç, –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä, –ø—Ä–æ–≤–æ–¥–Ω–∏–∫, –∫–æ–º–∞–Ω–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á

‚ö†Ô∏è **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:** –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –î–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–Ω—ã–º —Ñ–∞–π–ª–∞–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω."""
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ pc_agent: {e}")
        return f"‚ùå **–û—à–∏–±–∫–∞ PC –∞–≥–µ–Ω—Ç–∞:** {str(e)}\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≥—Ä–∞—Ñ–∞ PC —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
class PCState(TypedDict):
    messages: Annotated[list, "messages"]
    user_id: str
    current_directory: str
    system_info: dict

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ PC —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
def create_pc_agent():
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç PC —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å –≥—Ä–∞—Ñ–æ–º"""
    
    def agent_node(state: PCState):
        """–û—Å–Ω–æ–≤–Ω–æ–π —É–∑–µ–ª –∞–≥–µ–Ω—Ç–∞ PC —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        user_input = state["messages"][-1].content if state["messages"] else ""
        user_id = state.get("user_id", "default_user")
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if any(phrase in user_input.lower() for phrase in ["—Å–∏—Å—Ç–µ–º–∞", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–ø—Ä–æ—Ü–µ—Å—Å—ã"]):
            return {"messages": [HumanMessage(content="–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...")]}
        elif any(phrase in user_input.lower() for phrase in ["—Ñ–∞–π–ª—ã", "–ø–æ–∏—Å–∫", "–ø–∞–ø–∫–∞"]):
            return {"messages": [HumanMessage(content="–†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π...")]}
        elif any(phrase in user_input.lower() for phrase in ["–æ–∫–Ω–∞", "–ø—Ä–æ–≥—Ä–∞–º–º—ã", "–∑–∞–ø—É—Å–∫"]):
            return {"messages": [HumanMessage(content="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏ –∏ –æ–∫–Ω–∞–º–∏...")]}
        else:
            return {"messages": [HumanMessage(content="üíª PC Management Agent –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")]}
    
    def router(state: PCState):
        """–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É–∑–ª–∞"""
        if not state["messages"]:
            return "done"
        
        last_message = state["messages"][-1].content.lower()
        
        if "—Å–∏—Å—Ç–µ–º–∞" in last_message or "–ø—Ä–æ—Ü–µ—Å—Å—ã" in last_message:
            return "system"
        elif "—Ñ–∞–π–ª—ã" in last_message or "–ø–æ–∏—Å–∫" in last_message:
            return "files"
        elif "–æ–∫–Ω–∞" in last_message or "–ø—Ä–æ–≥—Ä–∞–º–º—ã" in last_message:
            return "windows"
        else:
            return "done"
    
    def system_node(state: PCState):
        """–£–∑–µ–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π"""
        return {"messages": [HumanMessage(content="üîß –°–∏—Å—Ç–µ–º–Ω—ã–π —É–∑–µ–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")]}
    
    def files_node(state: PCState):
        """–£–∑–µ–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏"""
        return {"messages": [HumanMessage(content="üìÅ –§–∞–π–ª–æ–≤—ã–π —É–∑–µ–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")]}
    
    def windows_node(state: PCState):
        """–£–∑–µ–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–∫–Ω–∞–º–∏"""
        return {"messages": [HumanMessage(content="ü™ü –£–∑–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–∫–Ω–∞–º–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")]}
    
    def done_node(state: PCState):
        """–ó–∞–≤–µ—Ä—à–∞—é—â–∏–π —É–∑–µ–ª"""
        return {"messages": [HumanMessage(content="‚úÖ PC Management Agent –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")]}
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∞
    workflow = StateGraph(PCState)
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–∑–ª–æ–≤
    workflow.add_node("agent", agent_node)
    workflow.add_node("system", system_node)
    workflow.add_node("files", files_node)
    workflow.add_node("windows", windows_node)
    workflow.add_node("done", done_node)
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä—ë–±–µ—Ä
    workflow.add_edge(START, "agent")
    workflow.add_conditional_edges("agent", router)
    workflow.add_edge("system", "done")
    workflow.add_edge("files", "done")
    workflow.add_edge("windows", "done")
    workflow.add_edge("done", "__end__")
    
    return workflow.compile()

# –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∞
graph = create_pc_agent()

# –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ PC —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
__all__ = [
    "pc_agent",
    "graph",
    "create_pc_agent",
    "PC_TOOLS",
    "get_system_info", 
    "run_program", 
    "list_programs", 
    "get_process_list", 
    "kill_process",
    "search_files", 
    "open_file", 
    "create_file", 
    "read_file", 
    "file_info", 
    "list_directory",
    "open_windows", 
    "close_window", 
    "get_window_info", 
    "minimize_window", 
    "maximize_window"
]
