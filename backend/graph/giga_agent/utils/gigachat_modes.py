"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞–º–∏ GigaChat
"""
import os
import json
import logging
from typing import Dict, Any, Optional
from enum import Enum

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)


class GigaChatMode(Enum):
    """–†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã GigaChat"""
    NORMAL = "normal"      # –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º (GigaChat-2-Pro)
    MINI = "mini"          # –ú–∏–Ω–∏ —Ä–µ–∂–∏–º (GigaChat-2-Mini)
    FAST = "fast"          # –ë—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º (GigaChat-2-Lite)


class GigaChatModeManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä —Ä–µ–∂–∏–º–æ–≤ GigaChat"""
    
    def __init__(self):
        self._mode = self._get_mode_from_env()
        self._custom_modifications = self._get_custom_modifications()
    
    def _get_mode_from_env(self) -> GigaChatMode:
        """–ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–∂–∏–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
        mode_str = os.getenv("GIGACHAT_MODE", "normal").lower()
        
        # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        if os.getenv("FORCE_GIGACHAT_MINI", "false").lower() == "true":
            mode_str = "mini"
        
        try:
            return GigaChatMode(mode_str)
        except ValueError:
            print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º GigaChat: {mode_str}. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–∂–∏–º 'normal'")
            return GigaChatMode.NORMAL
    
    def _get_custom_modifications(self) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
        modifications = {}
        
        # –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –º–æ–¥–µ–ª–∏
        if os.getenv("GIGACHAT_CUSTOM_MODEL"):
            modifications["model"] = os.getenv("GIGACHAT_CUSTOM_MODEL")
        
        # –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        if os.getenv("GIGACHAT_TEMPERATURE"):
            try:
                modifications["temperature"] = float(os.getenv("GIGACHAT_TEMPERATURE"))
            except ValueError:
                pass
        
        if os.getenv("GIGACHAT_MAX_TOKENS"):
            try:
                modifications["max_tokens"] = int(os.getenv("GIGACHAT_MAX_TOKENS"))
            except ValueError:
                pass
        
        if os.getenv("GIGACHAT_TOP_P"):
            try:
                modifications["top_p"] = float(os.getenv("GIGACHAT_TOP_P"))
            except ValueError:
                pass
        
        return modifications
    
    def get_model_name(self, original_model: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è –º–æ–¥–µ–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞"""
        if self._mode == GigaChatMode.MINI:
            return "mini"  # –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ API –Ω–∞–∑–≤–∞–Ω–∏–µ
        elif self._mode == GigaChatMode.FAST:
            return "lite"  # –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ API –Ω–∞–∑–≤–∞–Ω–∏–µ
        else:
            return original_model
    
    def modify_request_data(self, data: Dict[str, Any]) -> Dict[str, Any]:
        """–ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞"""
        logger.info("=" * 80)
        logger.info("üîß –ú–û–î–ò–§–ò–ö–ê–¶–ò–Ø JSON –î–õ–Ø GIGACHAT API")
        logger.info("=" * 80)
        
        # –õ–æ–≥–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        logger.info(f"üì• –ò–°–•–û–î–ù–´–ï –î–ê–ù–ù–´–ï:")
        logger.info(f"   –†–µ–∂–∏–º: {self._mode.value}")
        logger.info(f"   –ò—Å—Ö–æ–¥–Ω—ã–π JSON: {json.dumps(data, ensure_ascii=False, indent=2)}")
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö
        modified_data = data.copy()
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–µ–∂–∏–º–∞
        if self._mode == GigaChatMode.MINI:
            logger.info(f"üîÑ –ü–†–ò–ú–ï–ù–ï–ù–ò–ï MINI –†–ï–ñ–ò–ú–ê:")
            logger.info(f"   –ò—Å—Ö–æ–¥–Ω–∞—è –º–æ–¥–µ–ª—å: {data.get('model', '–Ω–µ —É–∫–∞–∑–∞–Ω–∞')}")
            
            modified_data["model"] = "mini"  # –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ API –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è GigaChat-Mini
            logger.info(f"   –ù–æ–≤–∞—è –º–æ–¥–µ–ª—å: {modified_data['model']}")
            
            # –î–ª—è –º–∏–Ω–∏ —Ä–µ–∂–∏–º–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
            original_temp = modified_data.get("temperature")
            original_tokens = modified_data.get("max_tokens")
            
            modified_data.setdefault("temperature", 0.7)
            modified_data.setdefault("max_tokens", 1000)
            
            logger.info(f"   –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {original_temp} ‚Üí {modified_data['temperature']}")
            logger.info(f"   –ú–∞–∫—Å —Ç–æ–∫–µ–Ω—ã: {original_tokens} ‚Üí {modified_data['max_tokens']}")
        
        elif self._mode == GigaChatMode.FAST:
            logger.info(f"üîÑ –ü–†–ò–ú–ï–ù–ï–ù–ò–ï FAST –†–ï–ñ–ò–ú–ê:")
            logger.info(f"   –ò—Å—Ö–æ–¥–Ω–∞—è –º–æ–¥–µ–ª—å: {data.get('model', '–Ω–µ —É–∫–∞–∑–∞–Ω–∞')}")
            
            modified_data["model"] = "lite"  # –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ API –Ω–∞–∑–≤–∞–Ω–∏–µ
            logger.info(f"   –ù–æ–≤–∞—è –º–æ–¥–µ–ª—å: {modified_data['model']}")
            
            # –î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–∂–∏–º–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
            original_temp = modified_data.get("temperature")
            original_tokens = modified_data.get("max_tokens")
            
            modified_data.setdefault("temperature", 0.5)
            modified_data.setdefault("max_tokens", 500)
            
            logger.info(f"   –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {original_temp} ‚Üí {modified_data['temperature']}")
            logger.info(f"   –ú–∞–∫—Å —Ç–æ–∫–µ–Ω—ã: {original_tokens} ‚Üí {modified_data['max_tokens']}")
        
        else:
            logger.info(f"üîÑ –û–ë–´–ß–ù–´–ô –†–ï–ñ–ò–ú - –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è")
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏
        if self._custom_modifications:
            logger.info(f"üîß –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ö–ê–°–¢–û–ú–ù–´–• –ú–û–î–ò–§–ò–ö–ê–¶–ò–ô:")
            logger.info(f"   –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {json.dumps(self._custom_modifications, ensure_ascii=False, indent=2)}")
            modified_data.update(self._custom_modifications)
        else:
            logger.info(f"üîß –ö–ê–°–¢–û–ú–ù–´–ï –ú–û–î–ò–§–ò–ö–ê–¶–ò–ò: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        
        # –õ–æ–≥–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        logger.info(f"üì§ –§–ò–ù–ê–õ–¨–ù–´–ô JSON:")
        logger.info(f"   {json.dumps(modified_data, ensure_ascii=False, indent=2)}")
        
        # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        changes = []
        for key, value in modified_data.items():
            if key not in data or data[key] != value:
                changes.append(f"   {key}: {data.get(key, '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')} ‚Üí {value}")
        
        if changes:
            logger.info(f"üìä –ò–ó–ú–ï–ù–ï–ù–ò–Ø:")
            for change in changes:
                logger.info(change)
        else:
            logger.info(f"üìä –ò–ó–ú–ï–ù–ï–ù–ò–Ø: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        
        logger.info("=" * 80)
        
        return modified_data
    
    def get_mode(self) -> GigaChatMode:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º"""
        return self._mode
    
    def set_mode(self, mode: GigaChatMode):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–µ–∂–∏–º"""
        self._mode = mode
    
    def is_mini_mode(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –º–∏–Ω–∏ —Ä–µ–∂–∏–º"""
        return self._mode == GigaChatMode.MINI
    
    def is_fast_mode(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –±—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º"""
        return self._mode == GigaChatMode.FAST
    
    def is_normal_mode(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º"""
        return self._mode == GigaChatMode.NORMAL


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ä–µ–∂–∏–º–æ–≤
mode_manager = GigaChatModeManager()


def get_gigachat_mode_manager() -> GigaChatModeManager:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä —Ä–µ–∂–∏–º–æ–≤"""
    return mode_manager


def activate_mini_mode():
    """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –º–∏–Ω–∏ —Ä–µ–∂–∏–º"""
    mode_manager.set_mode(GigaChatMode.MINI)


def activate_fast_mode():
    """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –±—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º"""
    mode_manager.set_mode(GigaChatMode.FAST)


def activate_normal_mode():
    """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º"""
    mode_manager.set_mode(GigaChatMode.NORMAL)
